
#Analyze Diamonds Dataset

getwd()
setwd(dir ='Rstudio/')
diamonds <-read.csv('diamondsbig.csv')
summary(diamonds1)

# 53940 obs and 10 variables
dim(diamonds) 
# 3 Ordered Factors
str(diamonds)

#How many diamonds cost less than $500?
nrow(subset(diamonds,price<500))
summary(diamonds$price < 500)
#How many diamonds cost less than $250?
nrow(subset(diamonds,price<250))
summary(diamonds$price < 250)
#How many diamonds cost $15000 or more?
nrow(subset(diamonds,price >=15000))
summary(diamonds$price >= 15000)


#Exploring the Peak
qplot(x=cut,y = price,data = diamonds,
      xlab = 'Price of Diamonds',
      ylab = 'Count of Diamonds in sample',
      color=I('black'),fill=I('#099DD9'),binwidth=1000)+
      scale_x_continuous(breaks = seq(0,99990,1000))

#Price by Cut
diamonds1 <-subset(diamonds, !is.na(price))
by(diamonds1$price,diamonds1$cut,max)
by(diamonds1$price,diamonds1$cut,min)
by(diamonds1$price,diamonds1$cut,median)


#Scales and Multiple Histograms
qplot(x = price, data = diamonds) + facet_wrap(~cut,scales ='free_y')+scale_x_log10()  #plot histo with free y axis

# Create a histogram of price per carat and facet it by cut.
p2<-qplot(x = price/carat, data = diamonds) +
  facet_wrap(~cut, scales = 'free_y') +
  scale_x_log10()

#Price Box Plots
#BOXPLOTS BY CLARITY, BOXPLOT BY COLOR, or BOXPLOTS BY CUT

qplot(x = clarity,y=price, data =diamonds,geom ='boxplot')+scale_y_continuous(lim=c(0,50000))
qplot(x = color,y=price, data =subset(diamonds),geom ='boxplot')
c

#Interquartile range - IQR
#1) What is the price range for the middle 50% of diamonds with color D?
#2)What is the price range for the middle 50% of diamonds with color J?
#3) What is the IQR for diamonds with the best color?
#4) What is the IQR for diamonds with the worst color?

by(diamonds1$price, diamonds1$color, summary)
by(diamonds1$price, diamonds1$color, IQR)

#Price per Carat Box Plots by Color
qplot(x = color,y=price/carat, data =diamonds,geom ='boxplot')+ggtitle("Price per Carat by Color")

#Carat frequency polygon
qplot(x = carat,data =diamonds,geom ='freqpoly',binwidth = 0.02)+
  scale_x_continuous(breaks = seq(0,10,0.5))


