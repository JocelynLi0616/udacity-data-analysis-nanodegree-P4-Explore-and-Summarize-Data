
#explore many variables--Facebook Dataset

getwd()
setwd(dir ='Rstudio/')
facebook <-read.delim('pseudo_facebook.tsv') 

names(facebook)


#Proportion of Friendships Initiated

facebook$prop_initiated<-facebook$friendships_initiated/facebook$friend_count

facebook<-subset(facebook,!is.na(prop_initiated))


# Create a line graph of the median proportion of
# friendships initiated ('prop_initiated') vs.
# tenure and color the line segment by
# year_joined.bucket.

# Recall, we created year_joined.bucket in Lesson 5
# by first creating year_joined from the variable tenure.
# Then, we used the cut function on year_joined to create
# four bins or cohorts of users.

# (2004, 2009]
# (2009, 2011]
# (2011, 2012]
# (2012, 2014]

facebook$year_joined<-floor(2014-facebook$tenure/365)
facebook$year_joined.bucket <- cut(facebook$year_joined,c(2004,2009,2011,2012,2014))


library(ggplot2)
ggplot(aes(y=prop_initiated,x=tenure),data=facebook)+geom_line(aes(color = year_joined.bucket),stat='summary',fun.y=median)


# Smooth the last plot you created of
# of prop_initiated vs tenure colored by
# year_joined.bucket. You can bin together ranges
# of tenure or add a smoother to the plot.

ggplot(aes(y=prop_initiated,x=tenure),data=facebook)+
  geom_smooth(aes(color = year_joined.bucket),stat='summary',fun.y=median)

ggplot(aes(y=prop_initiated,x=tenure),data=facebook)+
  geom_smooth(aes(color = year_joined.bucket))


# Diamonds dataset

# Create a scatter plot of the price/carat ratio
# of diamonds. The variable x should be
# assigned to cut. The points should be colored
# by diamond color, and the plot should be
# faceted by clarity.

data(diamonds)
summary(diamonds)

ggplot(aes(x=cut,y=price/carat,color=color),data=diamonds)+
  geom_jitter()+
  facet_wrap(~clarity)+
  scale_color_brewer(type = 'div')


# Let's consider the price of a diamond and it's carat weight.
# Create a scatterplot of price (y) vs carat weight (x).
# Limit the x-axis and y-axis to omit the top 1% of values.

ggplot(aes(x=carat,y=price),data=diamonds)+geom_point(fill=I('dd3333'))+
  xlim(0,quantile(diamonds$carat,0.99))+
  ylim(0,quantile(diamonds$price,0.99))+
  stat_smooth(method='lm')

# install these if necessary
install.packages('GGally')
install.packages('scales')
install.packages('memisc')
install.packages('lattice')
install.packages('MASS')
install.packages('car')
install.packages('reshape')
install.packages('plyr')


# Create two histograms of the price variable
# and place them side by side on one output image.


library(gridExtra)
library(ggplot2)

plot1<-ggplot(aes(x=price),data=diamonds)+geom_histogram()
plot2 <-ggplot(aes(x=price),data=diamonds)+geom_histogram()+scale_x_log10()
grid.arrange(plot1,plot2,ncol=2)

#Scatterplot Transformation
qplot(carat, price, data=diamonds) +
  scale_y_continuous( trans=log10_trans() ) +
  ggtitle('Price (log10) by Carat')

ggplot(aes(carat, price), data = diamonds) + 
  geom_point() + 
  scale_x_continuous(trans = cuberoot_trans(), limits = c(0.2, 3),
                     breaks = c(0.2, 0.5, 1, 2, 3)) + 
  scale_y_continuous(trans = log10_trans(), limits = c(350, 15000),
                     breaks = c(350, 1000, 5000, 10000, 15000)) +
  ggtitle('Price (log10) by Cube-Root of Carat')


